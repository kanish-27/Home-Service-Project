#!/usr/bin/env python
"""
Test payment page with detailed service information
"""
import os
import django
import sys

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'homeservice.settings')
django.setup()

from django.contrib.auth import get_user_model
import pymongo
from django.conf import settings

def test_detailed_service_payment():
    """Test payment page with booking that has detailed service info"""
    try:
        User = get_user_model()
        user = User.objects.get(email='test@example.com')
        
        # Connect to MongoDB directly
        client = pymongo.MongoClient(settings.DATABASES['default']['CLIENT']['host'])
        db = client[settings.DATABASES['default']['NAME']]
        
        # Find a booking with detailed service info
        booking = db['services_booking'].find_one({
            'customer_id': user.id,
            'notes': {'$regex': 'Booking for.*- Provider:'}
        })
        
        if not booking:
            print("‚ùå No detailed booking found")
            return False
        
        booking_id = str(booking['_id'])
        print(f"Testing with booking: {booking_id}")
        print(f"Notes: {booking.get('notes', 'No notes')}")
        
        # Test PaymentView
        from services.views import PaymentView
        from django.test import RequestFactory
        from django.contrib.sessions.middleware import SessionMiddleware
        from django.contrib.messages.middleware import MessageMiddleware
        
        # Create proper request
        factory = RequestFactory()
        request = factory.get(f'/services/payment/{booking_id}/')
        request.user = user
        
        # Add middleware
        middleware = SessionMiddleware(lambda x: None)
        middleware.process_request(request)
        request.session.save()
        
        msg_middleware = MessageMiddleware(lambda x: None)
        msg_middleware.process_request(request)
        
        # Test PaymentView
        view = PaymentView()
        view.request = request
        
        context = view.get_context_data(booking_id=booking_id)
        
        if context.get('booking'):
            print(f"\n‚úÖ SUCCESS! Payment page working with detailed service info")
            print(f"\nüìã Detailed Service Information:")
            print(f"   Service Name: {context.get('service_name', 'Unknown')}")
            print(f"   Description: {context.get('service_description', 'N/A')}")
            print(f"   Category: {context.get('service_category', 'N/A')}")
            print(f"   Duration: {context.get('service_duration', 'N/A')} hours")
            print(f"   Provider: {context.get('provider_name', 'Unknown')}")
            
            print(f"\nüí∞ Pricing Breakdown:")
            print(f"   Service Amount: ‚Çπ{context.get('subtotal', 0)}")
            print(f"   GST (18%): ‚Çπ{context.get('tax_amount', 0)}")
            print(f"   Total Amount: ‚Çπ{context.get('total_amount', 0)}")
            
            print(f"\nüîó Access the payment page at:")
            print(f"   http://127.0.0.1:8000/services/payment/{booking_id}/")
            print(f"   Login: test@example.com / testpass123")
            
            return True
        else:
            print(f"‚ùå FAILED! Booking not found in context")
            return False
            
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return False

if __name__ == '__main__':
    print("Testing Payment Page with Detailed Service Information")
    print("=" * 60)
    
    success = test_detailed_service_payment()
    
    if success:
        print(f"\nüéâ PAYMENT PAGE IS FULLY WORKING!")
        print(f"The payment page now shows:")
        print(f"‚úÖ Specific service name (e.g., 'Electrical Installation')")
        print(f"‚úÖ Detailed service description")
        print(f"‚úÖ Service category (e.g., 'Electrical')")
        print(f"‚úÖ Service duration in hours")
        print(f"‚úÖ Actual provider name (e.g., 'Rajesh Kumar')")
        print(f"‚úÖ Complete pricing breakdown with GST")
    else:
        print(f"\n‚ùå Payment page still has issues")
